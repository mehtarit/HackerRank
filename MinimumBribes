using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    static bool isTooChaotic(int[] q)
    {
        for(int i = 0; i < q.Length; i++)
        {
            if(q[i] - (i+1) > 2)
            return true;
        }

        return false;
    }

    static void swap(int index1, int index2, int[] arr)
    {
        int temp = arr[index2];
        arr[index2] = arr[index1];
        arr[index1] = temp;
    }

    // Complete the minimumBribes function below.
    static void minimumBribes(int[] q) {
        if(isTooChaotic(q))
        {
            Console.WriteLine("Too chaotic");
            return;
        }

        int current = q.Length-1;
        int swapCount = 0;

        while(current > -1)
        {
            if(q[current] == current+1 || q[current] < current+1)
            {
                current--;
                continue;
            }

            swap(current, current+1, q);
            swapCount++;
            current++;            
        }

        Console.WriteLine(swapCount.ToString());
    }

    static void Main(string[] args) {
        int t = Convert.ToInt32(Console.ReadLine());

        for (int tItr = 0; tItr < t; tItr++) {
            int n = Convert.ToInt32(Console.ReadLine());

            int[] q = Array.ConvertAll(Console.ReadLine().Split(' '), qTemp => Convert.ToInt32(qTemp))
            ;
            minimumBribes(q);
        }
    }
}
