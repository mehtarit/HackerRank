using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    static bool IsSpecialPalindrome(string s)
    {
        if(s.Length != 2)
        {
            int midIndex = s.Length/2;
            s.Remove(midIndex, 1);
        }

        char compare = s[0];

        foreach(char c in s)
        {
            if(c == compare)
            {
                continue;
            }

            return false;
        }

        return true;
    }

    // Complete the substrCount function below.
    static long substrCount(int n, string s) {
        int count = 0;

        if(n == 1) return 1;

        int subStringLenght = 2;

        while(subStringLenght < n)
        {
            for(int i=0; i < n; i++)
            {
                int maxIndex = i + subStringLenght;
                if(maxIndex > n-1)
                {
                    break;
                }

                string currentSubstring = s.Substring(i, subStringLenght);
                Console.WriteLine("Current Substring: " + currentSubstring);
                if(IsSpecialPalindrome(currentSubstring))
                {
                    count++;
                }
            }
            subStringLenght++;
        }

        return count + s.Length;

    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        string s = Console.ReadLine();

        long result = substrCount(n, s);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
