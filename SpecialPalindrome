using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    static bool IsRepeating(string s)
    {
        char toCompare = s[0];

        foreach(char c in s)
        {
            if(c != toCompare)
            {
                return false;
            }
        }

        return true;
    }

    static long PalindromeCount(string s, long count)
    {
        if(s.Length == 1)
        {
            count = count +1;
            return count;
        }

        if(s.Length % 2 !=0)
        {
            int mid = s.Length/2;
            string modified = s.Remove(mid, 1);
            if(IsRepeating(modified))
            {
                count = count+1;
                return count;
            }
        }

        else if(s.Length % 2 == 0)
        {
            if(IsRepeating(s))
            {
                count = count + 1;
                return count;
            }
        }

        return count;
    }

    // Complete the substrCount function below.
    static long substrCount(int n, string s) {

        long count = 0;
        int maxOffset = n;

        for(int i = 0; i < n; i++)
        {           
            int offset = 1;

            while(offset <= maxOffset)
            {
                string current = s.Substring(i, offset);
                Console.WriteLine("Current substring is: " + current);
                count = PalindromeCount(current, count);
                offset++;
            }

            maxOffset--;
        }

    return count;

    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        string s = Console.ReadLine();

        long result = substrCount(n, s);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
